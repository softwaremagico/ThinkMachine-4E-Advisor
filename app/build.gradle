plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.softwaremagico.tm.advisor'
    compileSdk 35

    signingConfigs {
        File keystoreFileConfig = rootProject.file('../../Documentos/Android Keys/keystore.config')
        release {
            Properties keystoreProps = new Properties()
            if (keystoreFileConfig.exists()) {
                keystoreProps.load(new FileInputStream(keystoreFileConfig))

                keyAlias keystoreProps['keyAlias']
                keyPassword keystoreProps['keyPassword']
                storePassword keystoreProps['storePassword']
                storeFile file('../../../Documentos/Android Keys/AndroidKeyStore.jks')
            }
        }
        beta {
            Properties keystoreProps = new Properties()
            if (keystoreFileConfig.exists()) {
                keystoreProps.load(new FileInputStream(file(keystoreFileConfig)))

                keyAlias keystoreProps['keyAlias']
                keyPassword keystoreProps['keyPassword']
                storePassword keystoreProps['storePassword']
                storeFile file('../../../Documentos/Android Keys/AndroidKeyStore.jks')
            }
        }
        alpha {
            Properties keystoreProps = new Properties()
            if (keystoreFileConfig.exists()) {
                keystoreProps.load(new FileInputStream(file(keystoreFileConfig)))

                keyAlias keystoreProps['keyAlias']
                keyPassword keystoreProps['keyPassword']
                storePassword keystoreProps['storePassword']
                storeFile file('../../../Documentos/Android Keys/AndroidKeyStore.jks')
            }
        }
    }

    defaultConfig {
        applicationId "com.softwaremagico.tm"
        minSdk 31
        targetSdk 35
        versionCode 6
        versionName "0.0.6-beta"
        setProperty("archivesBaseName", applicationId + "-v" + versionCode)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }

        beta {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            versionNameSuffix "-beta"
            signingConfig signingConfigs.beta
        }

        alpha {
            minifyEnabled false
            versionNameSuffix "-alpha"
            signingConfig signingConfigs.alpha
        }

        debug {
            minifyEnabled false
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

task checkstyle(type: Checkstyle) {
    description 'Check code standards'
    group 'verification'
    configFile file('checkstyle.xml')
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
    ignoreFailures = false
}

task pmd(type: Pmd) {
    ruleSetFiles = files("pmd-rules.xml")
    ignoreFailures = false
    ruleSets = []
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    implementation libs.think.machine.pdf
    implementation libs.cardview
    implementation libs.recyclerview
    implementation libs.room.runtime
    annotationProcessor libs.room.compiler
    implementation libs.core.splashscreen
    implementation libs.stax.api
    implementation libs.android.awt
}